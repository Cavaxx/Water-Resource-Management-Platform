version: '3.8'

services:
  # --------------------------------------------------------------------------
  # FLASK & MONGO
  # --------------------------------------------------------------------------
  flask_app:
    build:
      context: ./Interface  # The directory containing Dockerfile and app files for Flask
    container_name: flask_app_container
    ports:
      - "5001:5001"
    volumes:
      - ./Interface:/app       # Mount your Flask app directory
      - ./data:/app/data
    networks:
      - wm-network
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongodb_container:27017/water_management

  mongo:
    image: mongo:latest
    container_name: mongodb_container
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - wm-network

  # --------------------------------------------------------------------------
  # DATA MANAGEMENT SERVICES
  # --------------------------------------------------------------------------
  fetch_insert_data:
    build:
      context: ./data_management
      dockerfile: Dockerfile
    container_name: fetch_insert_data_container
    depends_on:
      - mongo
    networks:
      - wm-network
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_URI=mongodb://mongodb_container:27017/water_management
    command: ["python", "fetch_insert_data_MDB.py"]

  fetch_insert_facilitiesdata:
    build:
      context: ./data_management
      dockerfile: Dockerfile
    container_name: fetch_insert_facilitiesdata_container
    depends_on:
      - mongo
    networks:
      - wm-network
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_URI=mongodb://mongodb_container:27017/water_management
    command: ["python", "fetch_insert_facilitesdata_MDB.py"]

  fetch_weather_data:
    build:
      context: ./data_management
      dockerfile: Dockerfile
    container_name: fetch_weather_data_container
    depends_on:
      - mongo
    networks:
      - wm-network
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_URI=mongodb://mongodb_container:27017/water_management
      - WEATHER_API_KEY=YOUR_API_KEY
    command: ["python", "fetch_weather_data.py"]

  synthetic_weather_data:
    build:
      context: ./data_management
      dockerfile: Dockerfile
    container_name: synthetic_weather_data_service
    depends_on:
      - mongo
    networks:
      - wm-network
    environment:
      - MONGO_URI=mongodb://mongo:27017/
      - DB_NAME=weather_db
      - COLLECTION_NAME=synthetic_weather_data
    command: ["python", "synthetic_weather_data.py"]

  # --------------------------------------------------------------------------
  # SPARK CLUSTER: MASTER + WORKERS (all built from spark_app Dockerfile)
  # --------------------------------------------------------------------------
  spark-master:
    build:
      context: ./spark_app
      dockerfile: Dockerfile.spark
    image: custom-spark:latest
    container_name: spark-master-container
    networks:
      - wm-network
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
    ports:
      - "7077:7077"   # Spark master port
      - "8080:8080"   # Spark master web UI
    volumes:
      - ./spark_app:/app   # If you want live code changes to reflect
    # Otherwise the built image already has /app from Dockerfile

  spark-worker-1:
    image: custom-spark:latest
    container_name: spark-worker1-container
    networks:
      - wm-network
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
    ports:
      - "8081:8081"   # Worker web UI
    volumes:
      - ./spark_app:/app

  spark-worker-2:
    image: custom-spark:latest
    container_name: spark-worker2-container
    networks:
      - wm-network
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
    ports:
      - "8082:8081"   # Another worker UI on a different host port
    volumes:
      - ./spark_app:/app

  # --------------------------------------------------------------------------
  # SPEI CALCULATOR SERVICE
  # --------------------------------------------------------------------------
  spei_calculator:
    image: custom-spark:latest
    container_name: spei-calculator-container
    depends_on:
      - mongo
      - spark-master
      - spark-worker-1
      - spark-worker-2
    networks:
      - wm-network
    # Optional: mount ./spark_app so you can edit spei_calculator.py live
    volumes:
      - ./spark_app:/app
    # We'll run spark-submit referencing the script at /app/spei_calculator.py
    command: >
      /opt/bitnami/spark/bin/spark-submit
      --master spark://spark-master:7077
      --driver-memory 1g
      --packages org.mongodb.spark:mongo-spark-connector_2.12:10.3.0
      /app/spei_calculator.py
    environment:
      - MONGO_URI=mongodb://mongo:27017/
      - DB_NAME=water_management
      - INPUT_COLLECTIONS=weather_data,synthetic_weather_data
      - OUTPUT_COLLECTION=SPEI_PET

volumes:
  mongo-data:

networks:
  wm-network:
    driver: bridge
