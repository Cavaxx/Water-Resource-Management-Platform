version: '3.8'

services:
  flask_app:
    build:
      context: ./Interface  # The directory containing Dockerfile and app files for Flask
    container_name: flask_app_container
    ports:
      - "5001:5001"
    volumes:
      - ./Interface:/app  # Ensure only the Flask app directory is mounted to avoid conflicts
    networks:
      - wm-network
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongodb_container:27017/water_management

  mongo:
    image: mongo:latest
    container_name: mongodb_container
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - wm-network

  # Service for Inserting Data into MongoDB
  fetch_insert_data:
    build:
      context: ./data_management  # Set context to data_management directory
      dockerfile: Dockerfile      # Reference Dockerfile within data_management/
    container_name: fetch_insert_data_container
    depends_on:
      - mongo
    networks:
      - wm-network
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_URI=mongodb://mongodb_container:27017/water_management
    command: ["python", "fetch_insert_data_MDB.py"]  # Correct script path

  # Service for Inserting Facilities Data into MongoDB
  fetch_insert_facilitiesdata:
    build:
      context: ./data_management  # Set context to data_management directory
      dockerfile: Dockerfile      # Reference Dockerfile within data_management/
    container_name: fetch_insert_facilitiesdata_container
    depends_on:
      - mongo
    networks:
      - wm-network
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_URI=mongodb://mongodb_container:27017/water_management
    command: ["python", "fetch_insert_facilitesdata_MDB.py"]  # Correct script path

  # Service for Fetching Weather Data
  fetch_weather_data:
    build:
      context: ./data_management  # Set context to data_management directory
      dockerfile: Dockerfile      # Reference Dockerfile within data_management/
    container_name: fetch_weather_data_container
    depends_on:
      - mongo
    networks:
      - wm-network
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_URI=mongodb://mongodb_container:27017/water_management
      - WEATHER_API_KEY=70e51b1fbf1d3d148ea5e8e36dbfd00e  # Hardcoded API key
    command: ["python", "fetch_weather_data.py"]  # Correct script path

volumes:
  mongo-data:

networks:
  wm-network:
    driver: bridge
